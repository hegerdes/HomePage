{
  "projects": [
    {
      "title": "WebDoom | C/JS/WASM",
      "undertitle": "Doom in the Browser",
      "msg": [
        "Do you remember playing the original DOOM(1993)?",
        " No? Me either. Wasn't born yet. But through a friend I got interested in this piece of computer history that revolutionized pc games with its 3D graphics. I got the SDL version of the doom source code and played a little with it. With some changes and emscripten. I was able to port it to WebAssambly that runs the game in the any browser.",
        " NOTE: Because of copyright I only included the Demo level."
      ],
      "pic": "/img/doom.png",
      "links": [
        { "url": "https://web-doom.herokuapp.com/", "text": "Live Version" },
        {
          "url": "https://github.com/hegerdes/Webassambly_SDL_Doom",
          "text": "View Repository"
        }
      ]
    },
    {
      "title": "FlappyBird | Java",
      "undertitle": "A OpenGL FlappyBird clone",
      "msg": [
        "You gotta jump on the hype. This is a simple FlappyBird clone written in Java using LWJGL. It uses OpenGL Shaders and Vertices for rendering. Just like the mobile version this game is hard. But installation is easy. Just clone the code and run maven on the pom file. Maven takes care of all dependency's."
      ],
      "pic": "/img/flappy.gif",
      "links": [
        {
          "url": "https://github.com/hegerdes/FlappyBird",
          "text": "View Repository"
        }
      ]
    },
    {
      "title": "Beeblebrox CTF | JS/Bash",
      "undertitle": "Capture the Flag for IT-Sec starters",
      "msg": [
        "Within an IT-Security internship a created a training CTF. This CTF is for beginners and helps to understand Unix, the Terminal, Scripting, Reverse engineering, SQL Injections and Web- Authentication; Web-Scraping. The whole CTF is in a VM. Th get the VM please contact me. Every task in the CTF has its own WebPage with description which is done with NodeJS. Visit a copy of the pages here. The code for the CTF creation is on my GitHub."
      ],
      "pic": "/img/ctf.png",
      "links": [
        { "url": "/ctf", "text": "Live Version" },
        {
          "url": "https://github.com/hegerdes/BeeblebroxCTF",
          "text": "View Repository"
        }
      ]
    },
    {
      "title": "ReddVid | Python & JS",
      "undertitle": "Flask & Vue based",
      "msg": [
        "Having a hard time to download Videos from Reddit?",
        "ReddVid might be the perfect solution. It consits of two parts: the backend written in Python and the frontend written in VUE.js. The backend scrapes Reddit with the help of BeautifulSoup and combines the seperated video and audio with ffmpeg.",
        "The API can be used in the terminal or by the frontend. Visit the live version:"
      ],
      "pic": "/img/reddvid.png",
      "links": [
        {
          "url": "https://reddvid.netlify.app/",
          "text": "Live Version"
        },
        {
          "url": "https://github.com/hegerdes/ReddVid/tree/master",
          "text": "View Repository"
        }
      ]
    },
    {
      "title": "URL Shortner | JavaScript",
      "undertitle": "NodeJS & Vue based",
      "msg": [
        "These Amazon product URLs are too long?",
        "Than use a URL shortner. Just the BASE_URL/SHORT and you can save a lot of typing. This NodeJS App exposes a REST-API. A simple POST to '/url' will generate a new Database entry with your URL and either a custom or random generated short. If the short gets requested you simply get redirected. The API is consumed by a simple Vue fronted."
      ],
      "pic": "/img/lazy.png",
      "links": [
        {
          "url": "https://lazyurl.henrikgerdes.me",
          "text": "Live Version"
        },
        {
          "url": "https://github.com/hegerdes/Lazy-URL",
          "text": "View Repository"
        }
      ]
    },
    {
      "title": "QT Game | C++",
      "undertitle": "Strategy game with OpenGL duels",
      "msg": [
        "This is a round based 2D/3D strategy game. Two players fight over map domination. In the case of direct attacks, the player must win a real time 3D space shooter fight.",
        "Window management, views, Networking and synchronization are done in QT-Framework. Boost is used for IO, graph algorithms and way finding. "
      ],
      "pic": "/img/spaceqt.gif",
      "links": [
        {
          "url": "https://github.com/hegerdes/GalaxyFight",
          "text": "View Repository"
        }
      ]
    },
    {
      "title": "SpaceShooter | C++",
      "undertitle": "OpenGL 3rd person SpaceShooter",
      "msg": [
        "This is just the 3D part of the previous project. This has no networking and was a playground for C++ features. I used Boost, templates and meta template programming in this project to mess around with as most of C++ functions.",
        "Instead of QT I used SDL2. Build-system is done with cmake an custom scripts. "
      ],
      "pic": "/img/galaxy.png",
      "links": [
        {
          "url": "https://github.com/hegerdes/Cpp2018-VL",
          "text": "View Repository"
        }
      ]
    },
    {
      "title": "Pacmap | Python",
      "undertitle": "Map based multiplayer Pacman",
      "msg": [
        "Pacmap is a custom version of Pacman. The map is a map section of the real world using OSM. Multiple players try to capture packages and deliver them to a random position. Ghosts and other players try to steal these packages.",
        "Ghosts move simulate real human movement, using the MSLAW or RandomStreet model. Rendering is done with PyGame. New maps can be generated with OpenStreetMaps."
      ],
      "pic": "/img/pac.gif",
      "links": [
        {
          "url": "https://github.com/hegerdes/RealWorldPacman",
          "text": "View Repository"
        }
      ]
    }
  ],
  "scrap": [
    {
      "title": "PYTHON",
      "msg": "2 years data mining and manipulation. Also use of AI algorithms, PyGame and general scripting with Python 3.",
      "link": "none"
    },
    {
      "title": "WEB",
      "msg": "Fluid with HTML, CSS, JavaScript, TypeScript. NodeJS backend and frontend projects using express, OAS and VUE.JS. I can to create REST APIs and responsive website with bootstrab.",
      "link": "none"
    },
    {
      "title": "C/C++",
      "msg": "1 1/2 years developing algorithms, OpenGL vertices and GUI elements using QT",
      "link": "none"
    },
    {
      "title": "JAVA",
      "msg": "3 years of object oriented programming, multimedia tools, datatypes and software-engineering concepts.",
      "link": "none"
    }
  ]
}
